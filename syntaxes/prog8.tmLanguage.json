{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Prog8",
  "patterns": [
    {
      "include": "#main"
    }
  ],
  "scopeName": "source.prog8",
  "repository": {
    "main": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#meta"
        },
        {
          "begin": "(^\\s*\\w+\\s*)(\\{)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.section.prog8"
            },
            "2": {
              "name": "punctuation.prog8"
            }
          },
          "patterns": [
            {
              "include": "#main__1"
            }
          ],
          "end": "(\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          }
        },
        {
          "begin": "(^\\s*\\w+\\s*)(\\$[\\da-fA-F]+\\s*)(\\{)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.section.prog8"
            },
            "2": {
              "name": "constant.numeric.prog8"
            },
            "3": {
              "name": "punctuation.prog8"
            }
          },
          "patterns": [
            {
              "include": "#main__2"
            }
          ],
          "end": "(\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          }
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "match": "(\\;.+)",
          "name": "comment.line.prog8"
        }
      ]
    },
    "constant": {
      "patterns": [
        {
          "match": "(true|false)",
          "name": "constant.language.prog8"
        }
      ]
    },
    "general": {
      "patterns": [
        {
          "begin": "(\\{)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          },
          "patterns": [
            {
              "include": "#general__1"
            }
          ],
          "end": "(\\})",
          "endCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          }
        },
        {
          "begin": "(\\\")",
          "beginCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          },
          "contentName": "text.prog8",
          "end": "(\\\")",
          "endCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          }
        },
        {
          "begin": "(\\()",
          "beginCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          },
          "patterns": [
            {
              "include": "#general__3"
            }
          ],
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          }
        },
        {
          "include": "#comment"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#storage"
        },
        {
          "include": "#constant"
        },
        {
          "include": "#support"
        },
        {
          "include": "#meta"
        },
        {
          "begin": "(\\w+)(\\s*)(\\()",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.prog8"
            },
            "2": {
              "name": "punctuation.prog8"
            },
            "3": {
              "name": "punctuation.prog8"
            }
          },
          "patterns": [
            {
              "include": "#general__4"
            }
          ],
          "end": "(\\))",
          "endCaptures": {
            "1": {
              "name": "punctuation.prog8"
            }
          }
        },
        {
          "match": "(\\b\\w+\\.)",
          "name": "entity.name.section.prog8"
        },
        {
          "include": "#variable"
        }
      ]
    },
    "general__1": {
      "patterns": [
        {
          "include": "#general"
        }
      ]
    },
    "general__2": {
      "patterns": []
    },
    "general__3": {
      "patterns": [
        {
          "include": "#general"
        }
      ]
    },
    "general__4": {
      "patterns": [
        {
          "include": "#general"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "(\\b(sub|if|if_cs|if_cc|if_eq|if_ne|if_pl|if_mi|if_vs|if_vc|if_z|if_nz|if_pos|if_neg|for|in|to|step|do|while|until|repeat|else|when|return|break|as|goto|asmsub|clobbers)\\b)",
          "name": "keyword.control.prog8"
        },
        {
          "match": "(\\b(and|or)\\b)",
          "name": "keyword.operator.prog8"
        }
      ]
    },
    "main__1": {
      "patterns": [
        {
          "include": "#general"
        }
      ]
    },
    "main__2": {
      "patterns": [
        {
          "include": "#general"
        }
      ]
    },
    "meta": {
      "patterns": [
        {
          "match": "(^\\s*)(%)([a-zA-Z]+)",
          "captures": {
            "1": {
              "name": "punctuation.prog8"
            },
            "2": {
              "name": "meta.directive.prog8"
            },
            "3": {
              "name": "keyword.control.directive.prog8"
            }
          }
        }
      ]
    },
    "numeric": {
      "patterns": [
        {
          "match": "(\\b\\d+)",
          "name": "constant.numeric.prog8"
        },
        {
          "match": "(\\-?\\d+\\.\\d+e?\\d+)",
          "name": "constant.numeric.prog8"
        },
        {
          "match": "(\\$[\\da-fA-F]+)",
          "name": "constant.numeric.prog8"
        },
        {
          "match": "(\\%[0-1]+)",
          "name": "constant.numeric.prog8"
        },
        {
          "match": "(\\'.\\')",
          "name": "constant.numeric.prog8"
        }
      ]
    },
    "storage": {
      "patterns": [
        {
          "match": "(\\b(void|ubyte|byte|word|uword|float|str)\\b)",
          "name": "storage.type.prog8"
        },
        {
          "match": "(\\b(const)\\b)",
          "name": "storage.modifier.prog8"
        }
      ]
    },
    "support": {
      "patterns": [
        {
          "match": "(\\b(abs|atan|ceil|cos|cos8u|cos8|cos16u|cos16|deg|floor|ln|log2|rad|round|sin|sgn|sin8u|sin8|sin16u|sin16|sqrt16|sqrt|tan|any|all|len|max|min|reverse|sum|sort|memcopy|memset|memsetw|leftstr|rightstr|strlen|strcmp|substr|exit|lsb|msb|mkword|rnd|rndw|rndf|rol|rol2|ror|ror2|rsave|rrestore|read_flags|sizeof|set_carry|clear_carry|set_irqd|clear_irqd|swap)\\b)",
          "name": "support.function.prog8"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "match": "(\\b\\w+\\b)",
          "name": "variable.other.prog8"
        }
      ]
    }
  }  
}
